"""update bots to use mutliple base assets

Revision ID: 4bc0f1cb12e2
Revises: 1d1d6433e806
Create Date: 2025-08-25 21:30:54.425982

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4bc0f1cb12e2"
down_revision: Union[str, None] = "1d1d6433e806"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("symbol_index_link")
    # Add with server_default for existing rows
    op.add_column(
        "bot",
        sa.Column(
            "base_asset",
            sa.Enum("USDC", "BTC", "BNB", name="baseassets"),
            nullable=False,
            server_default="USDC",
        ),
    )
    # Remove the default for future inserts
    op.alter_column("bot", "base_asset", server_default=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("bot", "base_asset")
    op.create_table(
        "symbol_index_link",
        sa.Column("symbol_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("asset_index_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["asset_index_id"],
            ["asset_index.id"],
            name=op.f("symbol_index_link_asset_index_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["symbol_id"],
            ["symbol.id"],
            name=op.f("symbol_index_link_symbol_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "symbol_id", "asset_index_id", name=op.f("symbol_index_link_pkey")
        ),
    )
    # ### end Alembic commands ###
