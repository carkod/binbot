import { BotStatus, BotStrategy } from "../../utils/enums";

export interface Deal {
  current_price?: number;
  trailling_stop_loss_price?: number;
  trailling_profit_price?: number;
  take_profit_price?: number;
  stop_loss_price?: number;
  opening_price: number;
  opening_qty: number;
  opening_timestamp: number;
  closing_price: number;
  closing_qty: number;
  closing_timestamp: number;
  margin_loan_id: number;
  total_interests: number;
  total_commissions: number;
}

export interface Bot {
  id: string;
  pair: string;
  fiat?: string;
  base_order_size: number;
  candle_interval?: string;
  close_condition?: string;
  dynamic_trailling: boolean;
  logs: string[];
  mode: string;
  name: string;
  status: BotStatus;
  stop_loss: number;
  margin_short_reversal: boolean;
  take_profit: number;
  trailling: boolean;
  trailling_deviation: number;
  trailling_profit: number;
  strategy: BotStrategy;
  balance_available: number;
  deal?: Deal;
  orders?: any[]; // Generated by Exchange
}

export interface BotEntity {
  ids: string[];
  entities: { [id: string]: Bot };
}

/**
 * This file contains redux state
 * that is shared between bots views
 * at the time of writing: bots and paper trading (test bots)
 */

// The initial state of the App
export const singleBot: Bot = {
  id: "",
  status: BotStatus.INACTIVE,
  balance_available: 0,
  base_order_size: 50,
  fiat: "USDC",
  logs: [],
  mode: "manual",
  name: `terminal_${new Date().getTime().toString()}`,
  pair: "",
  take_profit: 2.3,
  trailling: false,
  trailling_deviation: 2.8,
  trailling_profit: 2.3,
  dynamic_trailling: false,
  deal: {
    current_price: 0,
    trailling_stop_loss_price: 0,
    trailling_profit_price: 0,
    take_profit_price: 0,
    stop_loss_price: 0,
    opening_price: 0,
    opening_qty: 0,
    opening_timestamp: 0,
    closing_price: 0,
    closing_qty: 0,
    closing_timestamp: 0,
    margin_loan_id: 0,
    total_interests: 0,
    total_commissions: 0,
  },
  orders: [],
  stop_loss: 3,
  margin_short_reversal: true,
  strategy: BotStrategy.LONG,
};
