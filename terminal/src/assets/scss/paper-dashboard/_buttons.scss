@use "mixins/buttons";
@use "mixins/transitions";
@use "mixins/transparency";
@use "variables";

.btn,
.navbar .navbar-nav > a.btn {
  & {
    @include buttons.btn-styles(variables.$default-color, variables.$default-states-color);
    @include transitions.transition(variables.$fast-transition-time, linear);
  }

  border-width: variables.$border-thick;
  font-weight: variables.$font-weight-semi;
  font-size: variables.$font-size-small;
  line-height: variables.$line-height;
  text-transform: uppercase;
  border: none;
  border-radius: variables.$border-radius-small;
  padding: variables.$padding-btn-vertical variables.$padding-btn-horizontal;
  cursor: pointer;

  &:hover,
  &:focus {
    @include transparency.opacity(1);
    outline: 0 !important;
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    @include buttons.box-shadow(none);
    outline: 0 !important;
  }

  .badge {
    margin: 0;
  }

  .fa,
  .far,
  .fas,
  .nc-icon {
    &::before {
      pointer-events: none;
    }
  }

  &.btn-icon {
    // see above for color variations
    height: variables.$btn-icon-size-regular;
    min-width: variables.$btn-icon-size-regular;
    width: variables.$btn-icon-size-regular;
    padding: 0;
    font-size: variables.$btn-icon-font-size-regular;
    overflow: hidden;
    position: relative;
    line-height: normal;

    &.btn-simple {
      padding: 0;
    }

    &.btn-sm {
      height: variables.$btn-icon-size-small;
      min-width: variables.$btn-icon-size-small;
      width: variables.$btn-icon-size-small;

      .fa,
      .far,
      .fas,
      .nc-icon {
        font-size: variables.$btn-icon-font-size-small;
      }
    }

    &.btn-lg {
      height: variables.$btn-icon-size-lg;
      min-width: variables.$btn-icon-size-lg;
      width: variables.$btn-icon-size-lg;

      .fa,
      .far,
      .fas,
      .nc-icon {
        font-size: variables.$btn-icon-font-size-lg;
      }
    }

    &:not(.btn-footer) .nc-icon,
    &:not(.btn-footer) .fa,
    &:not(.btn-footer) .far,
    &:not(.btn-footer) .fas {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-12px, -12px);
      line-height: 1.5626rem;
      width: 24px;
    }

    &.btn-neutral {
      font-size: 20px;
    }
  }

  &:not(.btn-icon) .nc-icon {
    position: relative;
    top: 1px;
  }
}

// Apply the mixin to the buttons
// .btn-default { @include btn-styles($default-color, $default-states-color); }
.btn-primary {
  @include buttons.btn-styles(variables.$primary-color, variables.$primary-states-color);
}
.btn-success {
  @include buttons.btn-styles(variables.$success-color, variables.$success-states-color);
}
.btn-info {
  @include buttons.btn-styles(variables.$info-color, variables.$info-states-color);
}
.btn-warning {
  @include buttons.btn-styles(variables.$warning-color, variables.$warning-states-color);
}
.btn-danger {
  @include buttons.btn-styles(variables.$danger-color, variables.$danger-states-color);
}
// .btn-neutral { @include btn-styles($white-color, $white-color); }

.btn-outline-default {
  @include buttons.btn-outline-styles(variables.$default-color, variables.$default-states-color);
}
.btn-outline-primary {
  @include buttons.btn-outline-styles(variables.$primary-color, variables.$primary-states-color);
}
.btn-outline-success {
  @include buttons.btn-outline-styles(variables.$success-color, variables.$success-states-color);
}
.btn-outline-info {
  @include buttons.btn-outline-styles(variables.$info-color, variables.$info-states-color);
}
.btn-outline-warning {
  @include buttons.btn-outline-styles(variables.$warning-color, variables.$warning-states-color);
}
.btn-outline-danger {
  @include buttons.btn-outline-styles(variables.$danger-color, variables.$danger-states-color);
}
.btn-outline-neutral {
  @include buttons.btn-outline-styles(variables.$white-color, variables.$default-states-color);
  &:hover,
  &:focus {
    color: variables.$default-states-color;
    background-color: variables.$white-color;
  }
}
.btn-neutral {
  @include buttons.btn-styles(variables.$white-color, variables.$white-color);
  color: variables.$default-color;
  &:hover,
  &:focus {
    color: variables.$default-states-color;
  }

  &.btn-border {
    &:hover,
    &:focus {
      color: variables.$default-color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
      background-color: variables.$white-color;
      color: variables.$default-color;
    }
  }

  &.btn-link:active,
  &.btn-link.active {
    background-color: transparent;
  }
}

.btn {
  &:disabled,
  &[disabled],
  &.disabled {
    @include transparency.opacity(0.5);
    pointer-events: none;
  }
}
.btn-simple {
  border: variables.$border;
  border-color: variables.$default-color;
  padding: variables.$padding-btn-vertical - 1 variables.$padding-round-horizontal - 1;
  background-color: variables.$transparent-bg;
}

.btn-simple,
.btn-link {
  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: variables.$transparent-bg;
    }
  }
}

.btn-link {
  border: variables.$none;
  padding: variables.$padding-base-vertical variables.$padding-base-horizontal;
  background-color: variables.$transparent-bg;
}

.btn-lg {
  @include buttons.btn-size(
    variables.$padding-large-vertical,
    variables.$padding-large-horizontal,
    variables.$font-size-large,
    variables.$border-radius-large
  );
}
.btn-sm {
  @include buttons.btn-size(
    variables.$padding-small-vertical,
    variables.$padding-small-horizontal,
    variables.$font-size-small,
    variables.$border-radius-small
  );
}

.btn-wd {
  min-width: 140px;
}
.btn-group.select {
  width: 100%;
}
.btn-group.select .btn {
  text-align: left;
}
.btn-group.select .caret {
  position: absolute;
  top: 50%;
  margin-top: -1px;
  right: 8px;
}
.btn-group {
  .btn + .btn {
    margin-left: -3px;
  }
  .btn {
    &:focus {
      background-color: variables.$info-color !important;
    }
  }
}

.btn-round {
  border-width: variables.$border-thin;
  border-radius: variables.$btn-round-radius;
  padding-right: variables.$padding-round-horizontal;
  padding-left: variables.$padding-round-horizontal;

  &.btn-simple {
    padding: variables.$padding-btn-vertical - 1 variables.$padding-round-horizontal - 1;
  }
}

.no-caret {
  &.dropdown-toggle::after {
    display: none;
  }
}

.btn-reset {
  background: transparent;
  border: none;
  outline: none;
  padding: 0;
  margin: 0;

  &:focus {
    outline: none;
  }
}

.btn-margin-right {
  margin-right: variables.$margin-base-vertical;
}

.btn--tooltip {
  @extend .btn-reset;

  color: variables.$dark-gray;
  font-size: 9.0852px; // Equalize with card label size
  &::after {
    content: "\24D8";
    margin-left: variables.$margin-base-vertical;
  }
}
