networks:
  kafka_network:
    driver: bridge

services:
  api_db:
    image: postgres
    container_name: binbot_api_db
    restart: on-failure
    networks:
      - kafka_network
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 30s

  data_db:
    image: mongo:latest
    container_name: binbot_data_db
    restart: on-failure
    networks:
      - kafka_network
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_AUTH_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_AUTH_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_APP_DATABASE}
    ports:
      - 27018:27017
    volumes:
      - ./mongo_data:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--quiet",
          "127.0.0.1/test",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  kafka:
    image: bitnami/kafka:3.9
    container_name: binquant_kafka
    networks:
      - kafka_network
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_NUM_PARTITIONS=50 # Keep the same as prod (as low as possible to minimize disk space consumption)
      - KAFKA_CFG_ENABLE_AUTO_CREATE_TOPICS=true
      - BITNAMI_DEBUG=no
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server kafka:9092 --topic klines_store_topic --create --if-not-exists",
          "kafka-topics.sh --bootstrap-server kafka:9092 --topic klines_store_topic --describe",
        ]
      start_period: 10s
      timeout: 10s
      retries: 5

volumes:
  mongo_data:
  pg_data:
